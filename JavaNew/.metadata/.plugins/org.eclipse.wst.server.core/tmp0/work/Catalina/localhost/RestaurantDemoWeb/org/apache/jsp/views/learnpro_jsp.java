/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.24
 * Generated at: 2024-06-09 04:00:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class learnpro_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write(" <script>\r\n");
      out.write("	 function addRow() {\r\n");
      out.write("	     // Lấy dữ liệu từ bảng thứ nhất\r\n");
      out.write("	     var id = document.getElementById(\"id\").value;\r\n");
      out.write("	     var name = document.getElementById(\"name\").value;\r\n");
      out.write("\r\n");
      out.write("	     // Tạo một dòng mới trong bảng thứ hai\r\n");
      out.write("	     var table = document.getElementById(\"data-table\");\r\n");
      out.write("	     var row = table.insertRow(-1);\r\n");
      out.write("	     var cell1 = row.insertCell(0);\r\n");
      out.write("	     var cell2 = row.insertCell(1);\r\n");
      out.write("	     cell1.innerHTML = \"<td  name='ID'>\"+id+\"</td>\";\r\n");
      out.write("	     cell2.innerHTML = \"<td  name='NAME'>\"+name+\"</td>\";}\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>Hello</h1>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<h2>Form 1: Enter User Details</h2>\r\n");
      out.write("	<form action=\"LearnProProduct\" method=\"post\">\r\n");
      out.write("		<label for=\"userId\">User ID: </label>\r\n");
      out.write("		<input type=\"text\" id=\"userId\" name=\"userId\"><br><br>\r\n");
      out.write("		<label for=\"username\">Username: </label>\r\n");
      out.write("		<input type=\"text\" id=\"username\" name=\"username\"><br><br>\r\n");
      out.write("		<label for=\"email\">Email:</label>\r\n");
      out.write("		<input type=\"text\" id=\"email\" name=\"email\"><br><br>\r\n");
      out.write("		<input type=\"submit\" value=\"Submit Form 1\">\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	<h2>Form 2: Enter Product Details</h2>\r\n");
      out.write("	<h2>Enter User Details in the Table</h2>\r\n");
      out.write("    <form action=\"LearnProUser\" method=\"post\">\r\n");
      out.write("        <table border=\"1\">\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>User ID</th>\r\n");
      out.write("                <th>Username</th>\r\n");
      out.write("                <th>Email</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td><input type=\"text\" name=\"userIdd\"></td>\r\n");
      out.write("                <td><input type=\"text\" name=\"username\"></td>\r\n");
      out.write("                <td><input type=\"text\" name=\"email\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td><input type=\"text\" name=\"userIdd\"></td>\r\n");
      out.write("                <td><input type=\"text\" name=\"username\"></td>\r\n");
      out.write("                <td><input type=\"text\" name=\"email\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td><input type=\"text\" name=\"userIdd\"></td>\r\n");
      out.write("                <td><input type=\"text\" name=\"username\"></td>\r\n");
      out.write("                <td><input type=\"text\" name=\"email\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </table>\r\n");
      out.write("        <br>\r\n");
      out.write("        <input type=\"submit\" value=\"Submit\">\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("     <h2>Add Data</h2>\r\n");
      out.write("     Bảng thứ nhất \r\n");
      out.write("    <table>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>ID:</td>\r\n");
      out.write("            <td><input type=\"text\" id=\"id\"></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>Name:</td>\r\n");
      out.write("            <td><input type=\"text\" id=\"name\"></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td colspan=\"2\"><button type=\"button\" onclick=\"addRow()\">Add</button></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Bảng thứ hai -->\r\n");
      out.write("    <h3>Data Table</h3>\r\n");
      out.write("    <form id=\"data-form\" action=\"AddRow\" method=\"post\">\r\n");
      out.write("        <table id=\"data-table\" border=\"1\">\r\n");
      out.write("            <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>ID</th>\r\n");
      out.write("                    <th>Name</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("                <!-- Dữ liệu sẽ được thêm vào đây -->\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("        <br>\r\n");
      out.write("        <!-- Nút Submit -->\r\n");
      out.write("        <input type=\"submit\" value=\"Submit\">\r\n");
      out.write("    </form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
